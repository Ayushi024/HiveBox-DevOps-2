apiVersion: apps/v1
kind: Deployment
metadata:
  name: hivebox-sensor-api
  annotations:
    container.apparmor.security.beta.kubernetes.io/sensor-api: runtime/default
  labels:
    app: sensor-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sensor-api
  template:
    metadata:
      labels:
        app: sensor-api
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: sensor-api
          image: ghcr.io/ayushi024/hivebox-sensor-api@<DIGEST_PLACEHOLDER>  # Replace <DIGEST_PLACEHOLDER> with actual digest
          ports:
            - containerPort: 5000  # Flask API
            - containerPort: 8000  # Prometheus Metrics
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: openweather-secret-volume
              mountPath: /etc/secrets
              readOnly: true
          env:
            - name: VALKEY_HOST
              value: "valkey-service"  # Valkey (Redis-Compatible) service name
            - name: VALKEY_PORT
              value: "6379"
            - name: MINIO_ENDPOINT
              value: "minio-service:9000"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: accessKey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: secretKey
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readyz   # Updated readiness probe to check /readyz endpoint
              port: 5000
            initialDelaySeconds: 2
            periodSeconds: 5
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
            requests:
              memory: "128Mi"
              cpu: "250m"
      volumes:
        - name: openweather-secret-volume
          secret:
            secretName: openweather-secret

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hivebox-basic-versioning
  annotations:
    container.apparmor.security.beta.kubernetes.io/basic-versioning: runtime/default
  labels:
    app: basic-versioning
spec:
  replicas: 2
  selector:
    matchLabels:
      app: basic-versioning
  template:
    metadata:
      labels:
        app: basic-versioning
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: basic-versioning
          image: ghcr.io/ayushi024/hivebox-basic-versioning@<DIGEST_PLACEHOLDER> # Replace <DIGEST_PLACEHOLDER> with actual digest
          ports:
            - containerPort: 5001
            - containerPort: 8000  # Metrics endpoint exposed on 8000
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          livenessProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 2
            periodSeconds: 5
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
            requests:
              memory: "128Mi"
              cpu: "250m"
